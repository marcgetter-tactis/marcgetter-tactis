{#
/**
* @file
* Theme override to display a block.
*
* Available variables:
* - plugin_id: The ID of the block implementation.
* - label: The configured label of the block if visible.
* - configuration: A list of the block's configuration values.
*   - label: The configured label for the block.
*   - label_display: The display settings for the label.
*   - provider: The module or other provider that provided this block plugin.
*   - Block plugin specific settings will also be stored here.
* - content: The content of this block.
* - attributes: array of HTML attributes populated by modules, intended to
*   be added to the main container tag of this template.
*   - id: A valid HTML ID and guaranteed unique.
* - title_attributes: Same as attributes, except applied to the main title
*   tag that appears in the template.
* - title_prefix: Additional output populated by modules, intended to be
*   displayed in front of the main title tag that appears in the template.
* - title_suffix: Additional output populated by modules, intended to be
*   displayed after the main title tag that appears in the template.
* - bundle: The bundle of a custom block.
* - view_mode: The view mode a custom block was rendered in.
*
* @see template_preprocess_block()
* @see block_content_preprocess_block()
*/
#}
{%
set classes = [
    'block',
    'block-' ~ content['#block_content'].type[0].target_id,
    'block-' ~ configuration.provider|clean_class,
    'block-' ~ plugin_id|clean_class,
    'bg-full-width',
    content['#block_content'].field_alignment.value,
    content['#block_content'].field_background_class.value,
    bundle ? 'block--type-' ~ bundle|clean_class,
    view_mode ? 'block--view-mode-' ~ view_mode|clean_class,
    'faq-mainWrapper',
]
%}


{% set ctaText = content.field_cta['#items'][0].title %}
{% set ctaUrl = content.field_cta[0] %}
{% set heading = content.field_heading['#items'][0].value %}
{% set questions = content.field_questions %}
{#{% set isMultiple = content.field_questions['#is_multiple'] %}#}


<div{{ attributes.addClass(classes) }}>
  {{ title_prefix }}
  {% if label %}
  <h3{{ title_attributes }} class="block-title text-center">{{ label }}</h3>
  {% endif %}
  {{ title_suffix }}
  {% block content %}
    {% if heading|render|trim is not empty %}<h3 class="text-center">{{ heading }}</h3>{% endif %}

    <div class="accordion-grouping accordion-grouping__withExpandBtn">

      {% if questions["#items"]|length > 1 %}
        <div class="accordion-grouping__expandBtn">
          <button class="usa-button accordion-grouping__btn bg-transparent text-accent-cool-darker text-normal" aria-expanded="false" aria-controls="">[Expand All +]</button>
        </div>
        <div class="accordion-grouping__status" aria-label="All items in this group are currently closed" role="status" aria-hidden="false"></div>
      {% endif %}

      {{ questions }}
        {% if ctaUrl|render|trim is not empty %}
        <div class="field_cta margin-bottom-7">
            <a href="{{ ctaUrl }}" class="hover:bg-primary">{{ ctaText }}</a>
        </div>
        {% endif %}
    </div>


  {% endblock %}
</div>


